
@model TravelBlogWebApp.Models.Post

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Post</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LikesNumber)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LikesNumber)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Blog)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Blog.Id)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<hr />

<h3>Sections</h3>
@if (Model.Sections != null && Model.Sections.Count > 0)
{
    foreach (var section in Model.Sections)
    {
        <div>
            <h5>@Html.DisplayFor(modelItem => section.Title)</h5>
            <p>@Html.DisplayFor(modelItem => section.Content)</p>

            @if (!string.IsNullOrEmpty(section.ImagePath))
            {
                <img src="section.ImagePath" alt="Section Image" />
            }
        </div>
        <div>
            <a href="@Url.Action("Edit", "Sections", new { sectionId = section.Id })" class="btn btn-primary">Edit Section</a>
            <a href="@Url.Action("Delete", "Sections", new { sectionId = section.Id })" class="btn btn-danger">Delete Section</a>
        </div>
        <hr />
    }
}
else
{
    <p>No sections available.</p>
}

<hr />

<!-- Display comments -->
<h3>Comments</h3>
@if (Model.Comments != null && Model.Comments.Count > 0)
{
    foreach (var comment in Model.Comments)
    {
        <div>
            <p>@*<strong>@comment.User.UserName</strong>*@ commented on @comment.DateTime:</p>
            <p>@comment.Content</p>
        </div>
        <div>
            <a href="@Url.Action("Edit", "Comments", new { commentId = comment.Id })" class="btn btn-primary">Edit Comment</a>
            <a href="@Url.Action("Delete", "Comments", new { commentId = comment.Id })" class="btn btn-danger">Delete Comment</a>
        </div>
        <hr />

    }
}
else
{
    <p>No comments available.</p>
}


<hr />

<h4>Add a Section</h4>
@using (Html.BeginForm("AddSection", "Posts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.Hidden("postId", Model.Id)

    <div class="form-group">
        @Html.Label("Title")
        @Html.TextBox("title", null, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.Label("Content")
        @Html.TextArea("content", null, new { @class = "form-control", rows = "4" })
    </div>

    <div class="form-group">
        @Html.Label("Image")
        @Html.TextBox("image", null, new { type = "file", @class = "form-control-file" })
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
}

<h4>Add a Comment</h4>
@using (Html.BeginForm("AddComment", "Posts", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.Hidden("postId", Model.Id)

    <div class="form-group">
        @Html.TextArea("content", null, new { @class = "form-control", rows = "4" })
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
}
